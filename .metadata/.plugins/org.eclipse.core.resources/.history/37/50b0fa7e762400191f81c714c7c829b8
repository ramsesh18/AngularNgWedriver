package elements;

import org.openqa.selenium.WebDriver;

import elementIdenfier.FindElementIdentifierUsingButtonText;
import elementIdenfier.FindElementIdentifierUsingNgOptions;


public class Button {
	WebDriver driver;
	FindElementIdentifierUsingButtonText findelementidentifierusingbuttontext;
	
	public Button(WebDriver driver){
		   /** Creating an instance **/
			this.driver = driver;
			this.findelementidentifierusingbuttontext = new FindElementIdentifierUsingButtonText(driver);
	}
	
	/**
	 * This method takes the name of the button as input
	 * and click it using the name.
	 * Beware: If there are two buttons in the frame with same name, this might not work as expected.
	 * In that case, navigate to that element first and then use this method
	 * @param nameOfTheButton
	 */
	 public void clickTheButton(String nameOfTheButton){
			findelementidentifierusingbuttontext.button(nameOfTheButton);
	 }

	 /**
	  * Takes in the partial name of the button and then click accordingly.
	  * Example: If you have a button name "Click me to open", using just "click" would do if you partialButtonText
	  * @param nameOfTheButton
	  */
	 public void clickTheButtonUsingPartialText(String partialNameOfTheButton){
			findelementidentifierusingbuttontext.button(partialNameOfTheButton);
	 }
}
